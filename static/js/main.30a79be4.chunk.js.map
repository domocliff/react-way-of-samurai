{"version":3,"sources":["api/api.js","assets/images/user.png","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/hoc/withSuspence.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","file","newPost","postId"],"mappings":"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","file":"static/js/main.30a79be4.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"0d84da4a-577d-4e2a-a200-25b4e31870f8\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__39tNE\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6c3daf60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__12RVh\",\"item\":\"Navbar_item__1OkGr\",\"activeLink\":\"Navbar_activeLink__wPjKz\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport let updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.count }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n        let response = await apiMethod(userId);\n        if (response.data.resultCode == 0) {\n            dispatch(actionCreator(userId));\n        }\n        dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, { useState } from 'react';\nimport styles from './Paginator.module.css';\nimport cn from 'classnames';\n\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p) => {\n                return <span className={cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber)}\n                    key={p}\n                    onClick={(e) => {\n                        onPageChanged(p);\n                    }}>{p}</span>\n            })}\n        {portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User; ","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from './User';\n\nlet Users = ({ currentPage, totalUsersCount, pageSize, users, onPageChanged, ...props }) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n             totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                    followingInProgress={props.followingInProgress}\n                    key={u.id}\n                    unfollow={props.unfollow}\n                    follow={props.follow}\n                />)\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}  });\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n\n            }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input, createField } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow._store_ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from './components/hoc/withSuspence';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)} />\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\n\r\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst FormControl = ({ input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n            validate={validators}\n            component={component}\n            {...props}\n        /> {text}\n    </div>)","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__nd3tJ\",\"error\":\"FormsControls_error__3hJM_\",\"formSummaryError\":\"FormsControls_formSummaryError__1GzD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__7um_S\",\"pageNumber\":\"Paginator_pageNumber__3jF6z\",\"selectedPage\":\"Paginator_selectedPage__3v87Z\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ReTu\",\"loginBlock\":\"Header_loginBlock__3BCxu\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}