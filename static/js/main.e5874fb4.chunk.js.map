{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","api/api.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","fake","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","status","Users","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","loginBlock","isAuth","login","logout","SET_USER_DATA","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","response","getCaptchaUrl","securityAPI","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","password","rememberMe","captcha","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","then","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","backgroundColor","preloader","value","maxLengthCreator","maxLength","instance","axios","withCredentials","baseURL","headers","get","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","FormData","append","saveProfile","profile","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.e5874fb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__39tNE\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6c3daf60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__12RVh\",\"item\":\"Navbar_item__1OkGr\",\"activeLink\":\"Navbar_activeLink__wPjKz\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            { captchaUrl && <img src={captchaUrl} />}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>loading...</div>} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)} />\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <HashRouter >\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__nd3tJ\",\"error\":\"FormsControls_error__3hJM_\",\"formSummaryError\":\"FormsControls_formSummaryError__1GzD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__7um_S\",\"pageNumber\":\"Paginator_pageNumber__3jF6z\",\"selectedPage\":\"Paginator_selectedPage__3v87Z\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile );\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ReTu\",\"loginBlock\":\"Header_loginBlock__3BCxu\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}